// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommandNormal.proto

package com.whale.generator.netty.common.protocol;

public final class CommandNormal {
  private CommandNormal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   **
   * 指令类型 -&gt; 专门用以区分用户消息类型
   * </pre>
   *
   * Protobuf enum {@code CommandTypeNormal}
   */
  public enum CommandTypeNormal
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     **
     * 单纯文本消息
     * </pre>
     *
     * <code>TEXT = 0;</code>
     */
    TEXT(0),
    /**
     * <pre>
     **
     * 单纯图片消息
     * </pre>
     *
     * <code>PICTURE = 1;</code>
     */
    PICTURE(1),
    /**
     * <pre>
     **
     * 图片 + 文字
     * </pre>
     *
     * <code>PICTURE_AND_TEXT = 2;</code>
     */
    PICTURE_AND_TEXT(2),
    /**
     * <pre>
     **
     * 语音
     * </pre>
     *
     * <code>VOICE = 3;</code>
     */
    VOICE(3),
    /**
     * <pre>
     **
     * 视频
     * </pre>
     *
     * <code>VIDEO = 4;</code>
     */
    VIDEO(4),
    /**
     * <pre>
     **
     * 红包
     * </pre>
     *
     * <code>RED_PAPER = 5;</code>
     */
    RED_PAPER(5),
    /**
     * <pre>
     **
     * 文件
     * </pre>
     *
     * <code>FILE = 6;</code>
     */
    FILE(6),
    /**
     * <pre>
     **
     * 语音通话
     * </pre>
     *
     * <code>VOICE_CALL = 7;</code>
     */
    VOICE_CALL(7),
    /**
     * <pre>
     **
     * 视频通话
     * </pre>
     *
     * <code>VIDEO_CALL = 8;</code>
     */
    VIDEO_CALL(8),
    /**
     * <pre>
     **
     * 定位信息
     * </pre>
     *
     * <code>LOCATION = 9;</code>
     */
    LOCATION(9),
    /**
     * <pre>
     **
     * 其他
     * </pre>
     *
     * <code>OTHER = 10;</code>
     */
    OTHER(10),
    ;

    /**
     * <pre>
     **
     * 单纯文本消息
     * </pre>
     *
     * <code>TEXT = 0;</code>
     */
    public static final int TEXT_VALUE = 0;
    /**
     * <pre>
     **
     * 单纯图片消息
     * </pre>
     *
     * <code>PICTURE = 1;</code>
     */
    public static final int PICTURE_VALUE = 1;
    /**
     * <pre>
     **
     * 图片 + 文字
     * </pre>
     *
     * <code>PICTURE_AND_TEXT = 2;</code>
     */
    public static final int PICTURE_AND_TEXT_VALUE = 2;
    /**
     * <pre>
     **
     * 语音
     * </pre>
     *
     * <code>VOICE = 3;</code>
     */
    public static final int VOICE_VALUE = 3;
    /**
     * <pre>
     **
     * 视频
     * </pre>
     *
     * <code>VIDEO = 4;</code>
     */
    public static final int VIDEO_VALUE = 4;
    /**
     * <pre>
     **
     * 红包
     * </pre>
     *
     * <code>RED_PAPER = 5;</code>
     */
    public static final int RED_PAPER_VALUE = 5;
    /**
     * <pre>
     **
     * 文件
     * </pre>
     *
     * <code>FILE = 6;</code>
     */
    public static final int FILE_VALUE = 6;
    /**
     * <pre>
     **
     * 语音通话
     * </pre>
     *
     * <code>VOICE_CALL = 7;</code>
     */
    public static final int VOICE_CALL_VALUE = 7;
    /**
     * <pre>
     **
     * 视频通话
     * </pre>
     *
     * <code>VIDEO_CALL = 8;</code>
     */
    public static final int VIDEO_CALL_VALUE = 8;
    /**
     * <pre>
     **
     * 定位信息
     * </pre>
     *
     * <code>LOCATION = 9;</code>
     */
    public static final int LOCATION_VALUE = 9;
    /**
     * <pre>
     **
     * 其他
     * </pre>
     *
     * <code>OTHER = 10;</code>
     */
    public static final int OTHER_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommandTypeNormal valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommandTypeNormal forNumber(int value) {
      switch (value) {
        case 0: return TEXT;
        case 1: return PICTURE;
        case 2: return PICTURE_AND_TEXT;
        case 3: return VOICE;
        case 4: return VIDEO;
        case 5: return RED_PAPER;
        case 6: return FILE;
        case 7: return VOICE_CALL;
        case 8: return VIDEO_CALL;
        case 9: return LOCATION;
        case 10: return OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommandTypeNormal>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommandTypeNormal> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandTypeNormal>() {
            public CommandTypeNormal findValueByNumber(int number) {
              return CommandTypeNormal.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.whale.generator.netty.common.protocol.CommandNormal.getDescriptor().getEnumTypes().get(0);
    }

    private static final CommandTypeNormal[] VALUES = values();

    public static CommandTypeNormal valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommandTypeNormal(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CommandTypeNormal)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023CommandNormal.proto*\250\001\n\021CommandTypeNor" +
      "mal\022\010\n\004TEXT\020\000\022\013\n\007PICTURE\020\001\022\024\n\020PICTURE_AN" +
      "D_TEXT\020\002\022\t\n\005VOICE\020\003\022\t\n\005VIDEO\020\004\022\r\n\tRED_PA" +
      "PER\020\005\022\010\n\004FILE\020\006\022\016\n\nVOICE_CALL\020\007\022\016\n\nVIDEO" +
      "_CALL\020\010\022\014\n\010LOCATION\020\t\022\t\n\005OTHER\020\nB:\n)com." +
      "whale.generator.netty.common.protocolB\rC" +
      "ommandNormal"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
